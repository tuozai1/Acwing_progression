/*汉诺塔问题，条件如下：
1、这里有 A、B、C 和 D 四座塔。
2、这里有 n 个圆盘，n 的数量是恒定的。
3、每个圆盘的尺寸都不相同。
4、所有的圆盘在开始时都堆叠在塔 A 上，且圆盘尺寸从塔顶到塔底逐渐增大。
5、我们需要将所有的圆盘都从塔 A 转移到塔 D 上。
6、每次可以移动一个圆盘，当塔为空塔或者塔顶圆盘尺寸大于被移动圆盘时，可将圆盘移至这座塔上。
请你求出将所有圆盘从塔 A 移动到塔 D，所需的最小移动次数是多少。*/
/*                          1       将1~12个盘最小次数输出
                            3
                            5
                            9
                            13
                            17
                            25
                            33
                            41
                            49
                            65
                            81*/

// 汉诺塔问题
#include <iostream>
#include <cstring>
using namespace std;

int main(){
    int f[15],d[15];
    d[1] = 1;                           // 1个圆盘直接从A拿到C
    
    for(int i = 2;i <= 12;i++){                 // 3塔情况下的次数
        d[i] = 2 * d[i - 1] + 1;                // n个圆盘时，将n - 1个圆盘放到B，最后一个放到C，再把n - 1个在B的放到C
    }                                           // d[n] = 2 * d[n - 1] + 1;
    
    memset(f,0x3f,sizeof f);            
    f[0] = 0;
    for(int i = 1;i <= 12;i++)
        for(int j = 0;j < i;j++)
            f[i] = min(f[i],2 * f[j] + d[i - j]);   // 先把i个在4塔模式下放到B，然后把n - i个在3塔模式下放到D，最后把i个在4塔模式下放到D
                                                    // f[n] = min{2 * f[i] + f[n - i]}
    for(int i = 1;i <= 12;i++) printf("%d\n",f[i]);
    return 0;
}